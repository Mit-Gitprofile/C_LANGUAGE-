//Q-1.

// VOVEL AND CONSTANT USING SWITCH CASE:

#include <stdio.h>
#include<ctype.h>

int main()
{
    
        
        char c;
        
        printf("enter a character:");
        scanf("%c",&c);
    
        switch(c)
        {
            case 'a':
            case 'e':
            case 'i':  
            case 'o':  
            case 'u':  
            case 'A':  
            case 'E':
            case 'I':
            case 'O':
            case 'U':    
                printf("this character is vovel");
               break;
                
            default:
                printf("this character is not vovel");
        }
        

    return 0;
}


//==============================================================================


//Q-2.

//maximum value find in 1D array

#include <stdio.h>

int main()
{
    int n;
    printf("enter array length:");
    scanf("%d",&n);
    
    int a[n];
    int max=a[n];
    
    for(int i=0;i<n;i++)
    {
        printf("a[%d]:",i);
        scanf("%d",&a[i]);
        
    }
    
    printf("\n\n");
    for(int i=0;i<n;i++)
    {
        printf("a[%d]:",i);
        printf("%d\n",a[i]);
    }
    
    for(int i=0;i<n;i++)
    {
        if (a[i] >max) {
            max=a[i];
        }
    }
    
    printf("\nthe max value in array is:%d",max);

    return 0;
}

//==============================================================================

//Q-4.

//1D array square using pointer 

#include <stdio.h>

int main() {


        int n;
       
        printf("enter array length:");
        scanf("%d",&n);
        
        int a[n];
         int *ptr[n];
        
        for(int i=0;i<n;i++)
        {
            printf("a[%d]:",i);
            scanf("%d",&a[i]);
        }
         
        
         for(int i=0;i<n;i++)
        {
            ptr[i] = &a[i];
            printf("a[%d]:",i);
            printf("%d\n",(*ptr[i])*(*ptr[i]));
        }

    return 0;
}

//==============================================================================


// Q-5.

// STRUCTURE (car details using array object )

#include <stdio.h>

struct car{

    char car_name[60];
    char color[60];
    char model[60];
    int price;
   
}c[];

int main()
{
    int n,i;
    printf("enter no of car details have you insert");
    scanf("%d",&n);
    
    for(i=1;i<=n;i++)
    {
        printf("\n\nCAR no => %d \n\n",i);
        
        printf("enter car name:");
        scanf("%s",&c[i].car_name);
        
        printf("enter car color:");
        scanf("%s",&c[i].color);
        
        printf("enter car model:");
        scanf("%s",&c[i].model);
        
        printf("enter car price:");
        scanf("%d",&c[i].price);
        
    }
    
    for(i=1;i<=n;i++)
    {
        printf("\n\n CAR NO:%d\n",i);
        printf(" CAR NAME => %s\n",c[i].car_name);
        printf(" COLOR => %s\n",c[i].color);
        printf(" MODEL => %s\n",c[i].model);
        printf(" PRICE => %d\n",c[i].price);
       
    }
   

    return 0;
}


//==============================================================================


//Q-6.

//FILR-HANDLING(students detail)

#include <stdio.h>

int main() {

    FILE* fileptr;
    char name[3][50];
    char course[3][50];
    
    fileptr = fopen("data.txt", "w");
     if(fileptr != NULL) 
    {
        printf("file opening error!");
    }
   
    for(int i=0;i<3;i++)
    {
        printf("enter student name:");
        fgets(name[i],sizeof(name[i]),stdin);
         printf("enter student course:");
        fgets(course[i],sizeof(course[i]),stdin);
    }
    
     for (int i=0;i<3;i++) 
    {
        fprintf(fileptr,"Student Name: %s Course: %s\n", name[i], course[i]);
    }
    
    fclose(fileptr);

    return 0;
}

//==============================================================================

//Q-7.

//pattern

#include <stdio.h>

int main()
{
    int i,j;
    
    for(i=1;i<=5;i++)
    {
        for(j=1;j<=5;j++)
        {
            if(j<=i)
            {
                printf(" %d ",i*i);
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }

    return 0;
}